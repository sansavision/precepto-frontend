/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminImport } from './routes/_admin'
import { Route as AuthAuthImport } from './routes/_auth/auth'
import { Route as AdminAdminImport } from './routes/_admin/admin'
import { Route as MainDreamRouteImport } from './routes/_main/dream/route'
import { Route as MainAboutRouteImport } from './routes/_main/about/route'
import { Route as MainTemplateIndexImport } from './routes/_main/template/index'
import { Route as MainTranscriptionIdImport } from './routes/_main/transcription/$id'
import { Route as MainTemplateIdImport } from './routes/_main/template/$id'
import { Route as MainDraftIdImport } from './routes/_main/draft/$id'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const MainProfileIndexLazyImport = createFileRoute('/_main/profile/')()
const MainDreamIndexLazyImport = createFileRoute('/_main/dream/')()
const MainDashboardIndexLazyImport = createFileRoute('/_main/dashboard/')()
const MainAboutIndexLazyImport = createFileRoute('/_main/about/')()

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthAuthRoute = AuthAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => AuthRoute,
} as any)

const AdminAdminRoute = AdminAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AdminRoute,
} as any)

const MainDreamRouteRoute = MainDreamRouteImport.update({
  id: '/dream',
  path: '/dream',
  getParentRoute: () => MainRoute,
} as any)

const MainAboutRouteRoute = MainAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MainRoute,
} as any)

const MainProfileIndexLazyRoute = MainProfileIndexLazyImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/profile/index.lazy').then((d) => d.Route),
)

const MainDreamIndexLazyRoute = MainDreamIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainDreamRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/dream/index.lazy').then((d) => d.Route),
)

const MainDashboardIndexLazyRoute = MainDashboardIndexLazyImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main/dashboard/index.lazy').then((d) => d.Route),
)

const MainAboutIndexLazyRoute = MainAboutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainAboutRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/about/index.lazy').then((d) => d.Route),
)

const MainTemplateIndexRoute = MainTemplateIndexImport.update({
  id: '/template/',
  path: '/template/',
  getParentRoute: () => MainRoute,
} as any)

const MainTranscriptionIdRoute = MainTranscriptionIdImport.update({
  id: '/transcription/$id',
  path: '/transcription/$id',
  getParentRoute: () => MainRoute,
} as any)

const MainTemplateIdRoute = MainTemplateIdImport.update({
  id: '/template/$id',
  path: '/template/$id',
  getParentRoute: () => MainRoute,
} as any)

const MainDraftIdRoute = MainDraftIdImport.update({
  id: '/draft/$id',
  path: '/draft/$id',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_main/about': {
      id: '/_main/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MainAboutRouteImport
      parentRoute: typeof MainImport
    }
    '/_main/dream': {
      id: '/_main/dream'
      path: '/dream'
      fullPath: '/dream'
      preLoaderRoute: typeof MainDreamRouteImport
      parentRoute: typeof MainImport
    }
    '/_admin/admin': {
      id: '/_admin/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminImport
      parentRoute: typeof AdminImport
    }
    '/_auth/auth': {
      id: '/_auth/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthImport
    }
    '/_main/draft/$id': {
      id: '/_main/draft/$id'
      path: '/draft/$id'
      fullPath: '/draft/$id'
      preLoaderRoute: typeof MainDraftIdImport
      parentRoute: typeof MainImport
    }
    '/_main/template/$id': {
      id: '/_main/template/$id'
      path: '/template/$id'
      fullPath: '/template/$id'
      preLoaderRoute: typeof MainTemplateIdImport
      parentRoute: typeof MainImport
    }
    '/_main/transcription/$id': {
      id: '/_main/transcription/$id'
      path: '/transcription/$id'
      fullPath: '/transcription/$id'
      preLoaderRoute: typeof MainTranscriptionIdImport
      parentRoute: typeof MainImport
    }
    '/_main/template/': {
      id: '/_main/template/'
      path: '/template'
      fullPath: '/template'
      preLoaderRoute: typeof MainTemplateIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/about/': {
      id: '/_main/about/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof MainAboutIndexLazyImport
      parentRoute: typeof MainAboutRouteImport
    }
    '/_main/dashboard/': {
      id: '/_main/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainDashboardIndexLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/dream/': {
      id: '/_main/dream/'
      path: '/'
      fullPath: '/dream/'
      preLoaderRoute: typeof MainDreamIndexLazyImport
      parentRoute: typeof MainDreamRouteImport
    }
    '/_main/profile/': {
      id: '/_main/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof MainProfileIndexLazyImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminAdminRoute: typeof AdminAdminRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminRoute: AdminAdminRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainAboutRouteRouteChildren {
  MainAboutIndexLazyRoute: typeof MainAboutIndexLazyRoute
}

const MainAboutRouteRouteChildren: MainAboutRouteRouteChildren = {
  MainAboutIndexLazyRoute: MainAboutIndexLazyRoute,
}

const MainAboutRouteRouteWithChildren = MainAboutRouteRoute._addFileChildren(
  MainAboutRouteRouteChildren,
)

interface MainDreamRouteRouteChildren {
  MainDreamIndexLazyRoute: typeof MainDreamIndexLazyRoute
}

const MainDreamRouteRouteChildren: MainDreamRouteRouteChildren = {
  MainDreamIndexLazyRoute: MainDreamIndexLazyRoute,
}

const MainDreamRouteRouteWithChildren = MainDreamRouteRoute._addFileChildren(
  MainDreamRouteRouteChildren,
)

interface MainRouteChildren {
  MainAboutRouteRoute: typeof MainAboutRouteRouteWithChildren
  MainDreamRouteRoute: typeof MainDreamRouteRouteWithChildren
  MainDraftIdRoute: typeof MainDraftIdRoute
  MainTemplateIdRoute: typeof MainTemplateIdRoute
  MainTranscriptionIdRoute: typeof MainTranscriptionIdRoute
  MainTemplateIndexRoute: typeof MainTemplateIndexRoute
  MainDashboardIndexLazyRoute: typeof MainDashboardIndexLazyRoute
  MainProfileIndexLazyRoute: typeof MainProfileIndexLazyRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainAboutRouteRoute: MainAboutRouteRouteWithChildren,
  MainDreamRouteRoute: MainDreamRouteRouteWithChildren,
  MainDraftIdRoute: MainDraftIdRoute,
  MainTemplateIdRoute: MainTemplateIdRoute,
  MainTranscriptionIdRoute: MainTranscriptionIdRoute,
  MainTemplateIndexRoute: MainTemplateIndexRoute,
  MainDashboardIndexLazyRoute: MainDashboardIndexLazyRoute,
  MainProfileIndexLazyRoute: MainProfileIndexLazyRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof MainRouteWithChildren
  '/about': typeof MainAboutRouteRouteWithChildren
  '/dream': typeof MainDreamRouteRouteWithChildren
  '/admin': typeof AdminAdminRoute
  '/auth': typeof AuthAuthRoute
  '/draft/$id': typeof MainDraftIdRoute
  '/template/$id': typeof MainTemplateIdRoute
  '/transcription/$id': typeof MainTranscriptionIdRoute
  '/template': typeof MainTemplateIndexRoute
  '/about/': typeof MainAboutIndexLazyRoute
  '/dashboard': typeof MainDashboardIndexLazyRoute
  '/dream/': typeof MainDreamIndexLazyRoute
  '/profile': typeof MainProfileIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof MainRouteWithChildren
  '/admin': typeof AdminAdminRoute
  '/auth': typeof AuthAuthRoute
  '/draft/$id': typeof MainDraftIdRoute
  '/template/$id': typeof MainTemplateIdRoute
  '/transcription/$id': typeof MainTranscriptionIdRoute
  '/template': typeof MainTemplateIndexRoute
  '/about': typeof MainAboutIndexLazyRoute
  '/dashboard': typeof MainDashboardIndexLazyRoute
  '/dream': typeof MainDreamIndexLazyRoute
  '/profile': typeof MainProfileIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_main/about': typeof MainAboutRouteRouteWithChildren
  '/_main/dream': typeof MainDreamRouteRouteWithChildren
  '/_admin/admin': typeof AdminAdminRoute
  '/_auth/auth': typeof AuthAuthRoute
  '/_main/draft/$id': typeof MainDraftIdRoute
  '/_main/template/$id': typeof MainTemplateIdRoute
  '/_main/transcription/$id': typeof MainTranscriptionIdRoute
  '/_main/template/': typeof MainTemplateIndexRoute
  '/_main/about/': typeof MainAboutIndexLazyRoute
  '/_main/dashboard/': typeof MainDashboardIndexLazyRoute
  '/_main/dream/': typeof MainDreamIndexLazyRoute
  '/_main/profile/': typeof MainProfileIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/dream'
    | '/admin'
    | '/auth'
    | '/draft/$id'
    | '/template/$id'
    | '/transcription/$id'
    | '/template'
    | '/about/'
    | '/dashboard'
    | '/dream/'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/admin'
    | '/auth'
    | '/draft/$id'
    | '/template/$id'
    | '/transcription/$id'
    | '/template'
    | '/about'
    | '/dashboard'
    | '/dream'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_auth'
    | '/_main'
    | '/_main/about'
    | '/_main/dream'
    | '/_admin/admin'
    | '/_auth/auth'
    | '/_main/draft/$id'
    | '/_main/template/$id'
    | '/_main/transcription/$id'
    | '/_main/template/'
    | '/_main/about/'
    | '/_main/dashboard/'
    | '/_main/dream/'
    | '/_main/profile/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_auth",
        "/_main"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/about",
        "/_main/dream",
        "/_main/draft/$id",
        "/_main/template/$id",
        "/_main/transcription/$id",
        "/_main/template/",
        "/_main/dashboard/",
        "/_main/profile/"
      ]
    },
    "/_main/about": {
      "filePath": "_main/about/route.tsx",
      "parent": "/_main",
      "children": [
        "/_main/about/"
      ]
    },
    "/_main/dream": {
      "filePath": "_main/dream/route.tsx",
      "parent": "/_main",
      "children": [
        "/_main/dream/"
      ]
    },
    "/_admin/admin": {
      "filePath": "_admin/admin.tsx",
      "parent": "/_admin"
    },
    "/_auth/auth": {
      "filePath": "_auth/auth.tsx",
      "parent": "/_auth"
    },
    "/_main/draft/$id": {
      "filePath": "_main/draft/$id.tsx",
      "parent": "/_main"
    },
    "/_main/template/$id": {
      "filePath": "_main/template/$id.tsx",
      "parent": "/_main"
    },
    "/_main/transcription/$id": {
      "filePath": "_main/transcription/$id.tsx",
      "parent": "/_main"
    },
    "/_main/template/": {
      "filePath": "_main/template/index.tsx",
      "parent": "/_main"
    },
    "/_main/about/": {
      "filePath": "_main/about/index.lazy.tsx",
      "parent": "/_main/about"
    },
    "/_main/dashboard/": {
      "filePath": "_main/dashboard/index.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/dream/": {
      "filePath": "_main/dream/index.lazy.tsx",
      "parent": "/_main/dream"
    },
    "/_main/profile/": {
      "filePath": "_main/profile/index.lazy.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
